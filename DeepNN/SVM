from sklearn import svm
from sklearn import metrics
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import MinMaxScaler
import DataReading as DR
X_train,t_train = DR.readData("train")
X_test,t_test = DR.readData("test")
def classify(t):
  T = []
  for CDM in t:
    if CDM>-6:
        T.append(1)
    else:
        T.append(0)
  return T
T_train = classify(t_train)
T_test = classify(t_test)
clf = make_pipeline(StandardScaler(),svm.SVC(kernel='rbf', class_weight='balanced', C=1.0, gamma='auto'))
svm.SVC(kernel='rbf', class_weight='balanced', C=1.0, gamma='auto', max_iter=5000) 
clf.fit(X_train,T_train)
T_pred = clf.predict(X_test)
print("Accuracy:",metrics.accuracy_score(T_test, T_pred))
print("Precision:",metrics.precision_score(T_test, T_pred))
print("Recall:",metrics.recall_score(T_test, T_pred))